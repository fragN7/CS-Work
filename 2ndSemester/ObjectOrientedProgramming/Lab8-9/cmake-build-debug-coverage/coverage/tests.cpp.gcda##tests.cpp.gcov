        -:    0:Source:C:/Users/Alen/Documents/GitHub/a8-9-913-Iaguta-Alen-Mihael/tests/tests.cpp
        -:    0:Graph:C:\Users\Alen\Documents\GitHub\a8-9-913-Iaguta-Alen-Mihael\cmake-build-debug-coverage\CMakeFiles\a8_9_913_Iaguta_Alen_Mihael.dir\tests\tests.cpp.gcno
        -:    0:Data:C:\Users\Alen\Documents\GitHub\a8-9-913-Iaguta-Alen-Mihael\cmake-build-debug-coverage\CMakeFiles\a8_9_913_Iaguta_Alen_Mihael.dir\tests\tests.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Alen on 16/03/2022.
        -:    3://
        -:    4:
        -:    5:#include "tests.h"
        -:    6:
function _ZN7TestingD2Ev called 0 returned 0% blocks executed 0%
    #####:    7:Testing::~Testing() = default;
        -:    8:
        -:    9:
function _ZN7Testing11test_domainEv called 1 returned 100% blocks executed 50%
        1:   10:void Testing::test_domain() {
        -:   11:
        1:   12:    Event default_event{};
        1:   12-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   13:
        1:   14:    std::string link = "https://1.com";
        1:   14-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   14-block  1
        1:   15:    std::string title = "title";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   15-block  0
        1:   16:    std::string description = "desc";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   16-block  0
        1:   17:    std::string date_time = "12/12/1222 12:12";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   17-block  0
        1:   18:    Event test_event(link, title, description, date_time, 45);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   19:
       1*:   20:    assert(test_event.get_link() == link);
        1:   20-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   20-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   20-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   20-block  3
    %%%%%:   20-block  4
        1:   20-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   20-block  6
call   11 returned 1
    $$$$$:   20-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   20-block  8
call   14 never executed
    $$$$$:   20-block  9
       1*:   21:    assert(test_event.get_title() == title);
        1:   21-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   21-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   21-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   21-block  3
    %%%%%:   21-block  4
        1:   21-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   21-block  6
call   11 returned 1
    $$$$$:   21-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   21-block  8
call   14 never executed
    $$$$$:   21-block  9
       1*:   22:    assert(test_event.get_description() == description);
        1:   22-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   22-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   22-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   22-block  3
    %%%%%:   22-block  4
        1:   22-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   22-block  6
call   11 returned 1
    $$$$$:   22-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   22-block  8
call   14 never executed
    $$$$$:   22-block  9
       1*:   23:    assert(test_event.get_date_time() == date_time);
        1:   23-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   23-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   23-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   23-block  3
    %%%%%:   23-block  4
        1:   23-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   23-block  6
call   11 returned 1
    $$$$$:   23-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   23-block  8
call   14 never executed
    $$$$$:   23-block  9
       1*:   24:    assert(test_event.get_people_number() == 45);
        1:   24-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   24-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   24-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   24-block  3
    %%%%%:   24-block  4
        -:   25:
        1:   26:    std::string link1 = "https://2.com";
        1:   26-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   26-block  1
        1:   27:    std::string title1= "title";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   27-block  0
        1:   28:    std::string description1 = "desc";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   28-block  0
        1:   29:    std::string date_time1 = "12/09/1222 12:12";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   29-block  0
        1:   30:    Event test_event1(link1, title1, description1, date_time1, 90);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   31:
       1*:   32:    assert(test_event1.get_month() == 9);
        1:   32-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   32-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   32-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   32-block  3
    %%%%%:   32-block  4
       1*:   33:    assert(test_event.get_month() == 12);
        1:   33-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   33-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   33-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   33-block  3
    %%%%%:   33-block  4
        -:   34:
        1:   35:    std::string new_link = "https://lacoste.com";
        1:   35-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   35-block  1
        1:   36:    test_event.set_link(new_link);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   37:    assert(test_event.get_link() == new_link);
        1:   37-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   37-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   37-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   37-block  3
    %%%%%:   37-block  4
        1:   37-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   37-block  6
call   11 returned 1
    $$$$$:   37-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   37-block  8
call   14 never executed
    $$$$$:   37-block  9
        -:   38:
        1:   39:    std::string new_title = "new title";
        1:   39-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   39-block  1
        1:   40:    test_event.set_title(new_title);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   41:    assert(test_event.get_title() == new_title);
        1:   41-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   41-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   41-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   41-block  3
    %%%%%:   41-block  4
        1:   41-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   41-block  6
call   11 returned 1
    $$$$$:   41-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   41-block  8
call   14 never executed
    $$$$$:   41-block  9
        -:   42:
        1:   43:    std::string new_description = "new description";
        1:   43-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   43-block  1
        1:   44:    test_event.set_description(new_description);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   45:    assert(test_event.get_description() == new_description);
        1:   45-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   45-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   45-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   45-block  3
    %%%%%:   45-block  4
        1:   45-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   45-block  6
call   11 returned 1
    $$$$$:   45-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   45-block  8
call   14 never executed
    $$$$$:   45-block  9
        -:   46:
        1:   47:    std::string new_date_time = "new date_time";
        1:   47-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   47-block  1
        1:   48:    test_event.set_date_time(new_date_time);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   49:    assert(test_event.get_date_time() == new_date_time);
        1:   49-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   49-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   49-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   49-block  3
    %%%%%:   49-block  4
        1:   49-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   49-block  6
call   11 returned 1
    $$$$$:   49-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   49-block  8
call   14 never executed
    $$$$$:   49-block  9
        -:   50:
        1:   51:    test_event.set_people_number(80);
        1:   51-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   52:    assert(test_event.get_people_number() == 80);
        1:   52-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   52-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   52-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   52-block  3
    %%%%%:   52-block  4
        -:   53:
        1:   54:    std::stringstream string_event;
        1:   54-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   55:    string_event << test_event;
        1:   55-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   56:    assert(string_event.str() == "https://lacoste.com | new title | new description | new date_time | 80\n");
        1:   56-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   56-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   56-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:   56-block  3
    %%%%%:   56-block  4
        1:   56-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:   56-block  6
call   11 returned 1
    $$$$$:   56-block  7
branch 12 never executed
branch 13 never executed
    $$$$$:   56-block  8
call   14 never executed
    $$$$$:   56-block  9
        1:   57:}
        1:   57-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
call   13 returned 1
call   14 returned 1
call   15 returned 1
    $$$$$:   57-block  1
call   16 never executed
    $$$$$:   57-block  2
call   17 never executed
    $$$$$:   57-block  3
call   18 never executed
    $$$$$:   57-block  4
call   19 never executed
    $$$$$:   57-block  5
call   20 never executed
    $$$$$:   57-block  6
call   21 never executed
    $$$$$:   57-block  7
call   22 never executed
    $$$$$:   57-block  8
call   23 never executed
    $$$$$:   57-block  9
call   24 never executed
    $$$$$:   57-block 10
call   25 never executed
    $$$$$:   57-block 11
call   26 never executed
    $$$$$:   57-block 12
call   27 never executed
    $$$$$:   57-block 13
call   28 never executed
    $$$$$:   57-block 14
call   29 never executed
    $$$$$:   57-block 15
call   30 never executed
    $$$$$:   57-block 16
call   31 never executed
        -:   58:
function _ZN7Testing9test_repoEv called 1 returned 100% blocks executed 55%
        1:   59:void Testing::test_repo() {
        -:   60:
        1:   61:    Event_Repo test_event_repo{};
        1:   61-block  0
call    0 returned 1
        1:   62:    Event default_event{};
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   63:
        1:   64:    std::string link = "https://1.com";
        1:   64-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   64-block  1
        1:   65:    std::string title = "title";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   65-block  0
        1:   66:    std::string description = "desc";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   66-block  0
        1:   67:    std::string date_time = "12/12/1222 12:12";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   67-block  0
        1:   68:    Event test_event(link, title, description, date_time, 45);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   69:
        1:   70:    test_event_repo.add(test_event);
        1:   70-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   70-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   70-block  2
call    6 returned 1
    $$$$$:   70-block  3
call    7 never executed
    $$$$$:   70-block  4
       1*:   71:    assert(test_event_repo.get_event_number() == 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   71-block  0
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:   71-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:   71-block  2
    %%%%%:   71-block  3
        -:   72:
        -:   73:    try {
       2*:   74:        test_event_repo.add(test_event);
        1:   74-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   74-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:   74-block  2
call    6 never executed
        1:   74-block  3
call    7 returned 1
        1:   74-block  4
        -:   75:    }
        1:   76:    catch(RepoError& re){
        1:   76-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   76-block  1
call    2 returned 1
        -:   77:        assert(true);
        1:   78:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   79:
        1:   80:    std::string link1 = "https://2.com";
        1:   80-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   80-block  1
        1:   81:    Event test_event1(link1, title, description, date_time, 80);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   82:
        -:   83:    try {
       2*:   84:        test_event_repo.update(test_event1);
        1:   84-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   84-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:   84-block  2
call    6 never executed
        1:   84-block  3
call    7 returned 1
        1:   84-block  4
        -:   85:    }
        1:   86:    catch(RepoError& re){
        1:   86-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   86-block  1
call    2 returned 1
        -:   87:        assert(true);
        1:   88:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   89:
        1:   90:    test_event_repo.update(test_event);
        1:   90-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   90-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   90-block  2
call    6 returned 1
    $$$$$:   90-block  3
call    7 never executed
    $$$$$:   90-block  4
        -:   91:
        1:   92:    std::string link2 = "https://3.com";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:   92-block  0
        1:   93:    Event test_event2(link2, title, description, date_time, 60);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   94:    test_event_repo.add(test_event2);
        1:   94-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   94-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   94-block  2
call    6 returned 1
    $$$$$:   94-block  3
call    7 never executed
    $$$$$:   94-block  4
        -:   95:
        -:   96:    try {
       2*:   97:        test_event_repo.remove(test_event1.get_link());
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   97-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:   97-block  1
call    6 never executed
        1:   97-block  2
call    7 returned 1
        1:   97-block  3
        -:   98:    }
        1:   99:    catch (RepoError& re) {
        1:   99-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:   99-block  1
call    2 returned 1
        -:  100:        assert(true);
        1:  101:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  102:
        1:  103:    test_event_repo.remove(test_event.get_link());
        1:  103-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  103-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  103-block  2
call    6 returned 1
    $$$$$:  103-block  3
call    7 never executed
    $$$$$:  103-block  4
       1*:  104:    assert(test_event_repo.get_event_number() == 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  104-block  0
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:  104-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:  104-block  2
    %%%%%:  104-block  3
        1:  105:}
        1:  105-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
    $$$$$:  105-block  1
call   11 never executed
    $$$$$:  105-block  2
call   12 never executed
    $$$$$:  105-block  3
call   13 never executed
    $$$$$:  105-block  4
call   14 never executed
    $$$$$:  105-block  5
call   15 never executed
    $$$$$:  105-block  6
call   16 never executed
    $$$$$:  105-block  7
call   17 never executed
    $$$$$:  105-block  8
call   18 never executed
    $$$$$:  105-block  9
call   19 never executed
    $$$$$:  105-block 10
call   20 never executed
    $$$$$:  105-block 11
call   21 never executed
        -:  106:
function _ZN7Testing12test_serviceEv called 1 returned 100% blocks executed 49%
        1:  107:void Testing::test_service() {
        -:  108:
        1:  109:    Event_Repo old_test_event_repo;
        1:  109-block  0
call    0 returned 1
        1:  110:    Event_Repo* test_event_repo = &old_test_event_repo;
        -:  111:    Event_Validation test_event_validation;
        1:  112:    Event_Service test_event_service(test_event_repo, test_event_validation);
call    0 returned 1
        -:  113:
        1:  114:    std::string link = "https://.1.com";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  114-block  0
        1:  115:    std::string title = "title";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  115-block  0
        1:  116:    std::string description = "desc";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  116-block  0
        1:  117:    std::string date_time = "12/12/1222 12:12";
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  117-block  0
        -:  118:
        1:  119:    test_event_service.add_event(link, title, description, date_time, 10);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  119-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  119-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  119-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  119-block  3
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  119-block  4
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
    $$$$$:  119-block  5
call   19 never executed
    $$$$$:  119-block  6
    $$$$$:  119-block  7
call   20 never executed
    $$$$$:  119-block  8
    $$$$$:  119-block  9
call   21 never executed
    $$$$$:  119-block 10
    $$$$$:  119-block 11
call   22 never executed
    $$$$$:  119-block 12
       1*:  120:    assert(test_event_service.get_number_events() == 1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  120-block  0
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:  120-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:  120-block  2
    %%%%%:  120-block  3
        -:  121:
        1:  122:    test_event_service.update_event(link, title, description, date_time, 50);
        1:  122-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  122-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  122-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  122-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  122-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  122-block  5
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
    $$$$$:  122-block  6
call   19 never executed
    $$$$$:  122-block  7
    $$$$$:  122-block  8
call   20 never executed
    $$$$$:  122-block  9
    $$$$$:  122-block 10
call   21 never executed
    $$$$$:  122-block 11
    $$$$$:  122-block 12
call   22 never executed
    $$$$$:  122-block 13
       1*:  123:    assert(test_event_service.list_events()[0].get_people_number() == 50);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  123-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  123-block  1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  123-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
        1:  123-block  3
    %%%%%:  123-block  4
        1:  123-block  5
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:  123-block  6
call   14 returned 1
    $$$$$:  123-block  7
branch 15 never executed
branch 16 never executed
    $$$$$:  123-block  8
call   17 never executed
    $$$$$:  123-block  9
        -:  124:
       1*:  125:    assert(test_event_service.get_number_events_for_month(12) == 1);
        1:  125-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  125-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:  125-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:  125-block  3
    %%%%%:  125-block  4
        -:  126:
        1:  127:    test_event_service.remove_event(link);
        1:  127-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  128:    assert(test_event_service.get_number_events() == 0);
        1:  128-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  128-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 1
    %%%%%:  128-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
        1:  128-block  3
    %%%%%:  128-block  4
        -:  129:
        1:  130:}
        1:  130-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
    $$$$$:  130-block  1
call    5 never executed
    $$$$$:  130-block  2
call    6 never executed
    $$$$$:  130-block  3
call    7 never executed
    $$$$$:  130-block  4
call    8 never executed
    $$$$$:  130-block  5
call    9 never executed
        -:  131:
function _ZN7Testing15test_validationEv called 1 returned 100% blocks executed 60%
        1:  132:void Testing::test_validation() {
        -:  133:
        1:  134:    std::string link;
        1:  134-block  0
call    0 returned 1
        -:  135:    try {
        1:  136:        Event_Validation::validate_link(link);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:  137:    }
        1:  138:    catch(ValidError& ve){
        1:  138-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  138-block  1
call    2 returned 1
        -:  139:        assert(true);
        1:  140:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  141:
        1:  142:    std::string link1 = "121";
        1:  142-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  142-block  1
        -:  143:    try {
        1:  144:        Event_Validation::validate_link(link1);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:  145:    }
        1:  146:    catch(ValidError& ve){
        1:  146-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  146-block  1
call    2 returned 1
        -:  147:        assert(true);
        1:  148:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  149:    std::string link2 = "ww2.olm.moc";
        1:  149-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  149-block  1
        -:  150:    try {
        1:  151:        Event_Validation::validate_link(link2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:  152:    }
        1:  153:    catch(ValidError& ve){
        1:  153-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  153-block  1
call    2 returned 1
        -:  154:        assert(true);
        1:  155:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  156:
        1:  157:    std::string link3;
        1:  157-block  0
call    0 returned 1
        1:  158:    std::string title;
call    0 returned 1
        1:  159:    std::string description;
call    0 returned 1
        1:  160:    std::string date;
call    0 returned 1
        -:  161:    try {
       2*:  162:        Event_Validation::validate_event(link3, title, description, date);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  162-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  162-block  1
call    6 never executed
        1:  162-block  2
call    7 returned 1
        1:  162-block  3
        -:  163:    }
        1:  164:    catch(ValidError& ve){
        1:  164-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  164-block  1
call    2 returned 1
        -:  165:        assert(true);
        1:  166:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  167:
        1:  168:    std::string date0 = "123";
        1:  168-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  168-block  1
        -:  169:    try {
       2*:  170:        Event_Validation::validate_event(link3, title, description, date0);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  170-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  170-block  1
call    6 never executed
        1:  170-block  2
call    7 returned 1
        1:  170-block  3
        -:  171:    }
        1:  172:    catch(ValidError& ve){
        1:  172-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  172-block  1
call    2 returned 1
        -:  173:        assert(true);
        1:  174:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  175:
        1:  176:    std::string date1 = "11 1111111111111";
        1:  176-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  176-block  1
        -:  177:    try {
       2*:  178:        Event_Validation::validate_event(link3, title, description, date1);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  178-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  178-block  1
call    6 never executed
        1:  178-block  2
call    7 returned 1
        1:  178-block  3
        -:  179:    }
        1:  180:    catch(ValidError& ve){
        1:  180-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  180-block  1
call    2 returned 1
        -:  181:        assert(true);
        1:  182:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  183:
        1:  184:    std::string date2 = "1111111111 11111";
        1:  184-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  184-block  1
        -:  185:    try {
       2*:  186:        Event_Validation::validate_event(link3, title, description, date2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  186-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  186-block  1
call    6 never executed
        1:  186-block  2
call    7 returned 1
        1:  186-block  3
        -:  187:    }
        1:  188:    catch(ValidError& ve){
        1:  188-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  188-block  1
call    2 returned 1
        -:  189:        assert(true);
        1:  190:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  191:
        1:  192:    std::string date3 = "91/11/1111 11:11";
        1:  192-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  192-block  1
        -:  193:    try {
       2*:  194:        Event_Validation::validate_event(link3, title, description, date3);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  194-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  194-block  1
call    6 never executed
        1:  194-block  2
call    7 returned 1
        1:  194-block  3
        -:  195:    }
        1:  196:    catch(ValidError& ve){
        1:  196-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  196-block  1
call    2 returned 1
        -:  197:        assert(true);
        1:  198:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  199:
        1:  200:    std::string date4 = "1a/11/1111 11:11";
        1:  200-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  200-block  1
        -:  201:    try {
       2*:  202:        Event_Validation::validate_event(link3, title, description, date4);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  202-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  202-block  1
call    6 never executed
        1:  202-block  2
call    7 returned 1
        1:  202-block  3
        -:  203:    }
        1:  204:    catch(ValidError& ve){
        1:  204-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  204-block  1
call    2 returned 1
        -:  205:        assert(true);
        1:  206:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  207:
        1:  208:    std::string date5 = "11/51/1111 11:11";
        1:  208-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  208-block  1
        -:  209:    try {
       2*:  210:        Event_Validation::validate_event(link3, title, description, date5);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  210-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  210-block  1
call    6 never executed
        1:  210-block  2
call    7 returned 1
        1:  210-block  3
        -:  211:    }
        1:  212:    catch(ValidError& ve){
        1:  212-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  212-block  1
call    2 returned 1
        -:  213:        assert(true);
        1:  214:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  215:
        1:  216:    std::string date6 = "11/1s/1111 11:11";
        1:  216-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  216-block  1
        -:  217:    try {
       2*:  218:        Event_Validation::validate_event(link3, title, description, date6);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  218-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  218-block  1
call    6 never executed
        1:  218-block  2
call    7 returned 1
        1:  218-block  3
        -:  219:    }
        1:  220:    catch(ValidError& ve){
        1:  220-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  220-block  1
call    2 returned 1
        -:  221:        assert(true);
        1:  222:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  223:
        1:  224:    std::string date7 = "11/11/1a11 11:11";
        1:  224-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  224-block  1
        -:  225:    try {
       2*:  226:        Event_Validation::validate_event(link3, title, description, date7);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  226-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  226-block  1
call    6 never executed
        1:  226-block  2
call    7 returned 1
        1:  226-block  3
        -:  227:    }
        1:  228:    catch(ValidError& ve){
        1:  228-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  228-block  1
call    2 returned 1
        -:  229:        assert(true);
        1:  230:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  231:
        1:  232:    std::string date8 = "11/11/1111 31:11";
        1:  232-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  232-block  1
        -:  233:    try {
       2*:  234:        Event_Validation::validate_event(link3, title, description, date8);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  234-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  234-block  1
call    6 never executed
        1:  234-block  2
call    7 returned 1
        1:  234-block  3
        -:  235:    }
        1:  236:    catch(ValidError& ve){
        1:  236-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  236-block  1
call    2 returned 1
        -:  237:        assert(true);
        1:  238:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  239:
        1:  240:    std::string date9 = "11/11/1111 1a:11";
        1:  240-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  240-block  1
        -:  241:    try {
       2*:  242:        Event_Validation::validate_event(link3, title, description, date9);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  242-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  242-block  1
call    6 never executed
        1:  242-block  2
call    7 returned 1
        1:  242-block  3
        -:  243:    }
        1:  244:    catch(ValidError& ve){
        1:  244-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  244-block  1
call    2 returned 1
        -:  245:        assert(true);
        1:  246:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  247:
        1:  248:    std::string date10 = "11/11/1111 11:61";
        1:  248-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  248-block  1
        -:  249:    try {
       2*:  250:        Event_Validation::validate_event(link3, title, description, date10);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  250-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  250-block  1
call    6 never executed
        1:  250-block  2
call    7 returned 1
        1:  250-block  3
        -:  251:    }
        1:  252:    catch(ValidError& ve){
        1:  252-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  252-block  1
call    2 returned 1
        -:  253:        assert(true);
        1:  254:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  255:
        1:  256:    std::string date11 = "11/11/1111 11:1a";
        1:  256-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  256-block  1
        -:  257:    try {
       2*:  258:        Event_Validation::validate_event(link3, title, description, date11);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  258-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  258-block  1
call    6 never executed
        1:  258-block  2
call    7 returned 1
        1:  258-block  3
        -:  259:    }
        1:  260:    catch(ValidError& ve){
        1:  260-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  260-block  1
call    2 returned 1
        -:  261:        assert(true);
        1:  262:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  263:
        1:  264:    std::string date12 = "11/11/1111 11111";
        1:  264-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  264-block  1
        -:  265:    try {
       2*:  266:        Event_Validation::validate_event(link3, title, description, date12);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  266-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  266-block  1
call    6 never executed
        1:  266-block  2
call    7 returned 1
        1:  266-block  3
        -:  267:    }
        1:  268:    catch(ValidError& ve){
        1:  268-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  268-block  1
call    2 returned 1
        -:  269:        assert(true);
        1:  270:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  271:
        1:  272:    std::string date13 = "11/11/1111 11:11";
        1:  272-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  272-block  1
        -:  273:    try {
       2*:  274:        Event_Validation::validate_event(link3, title, description, date13);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  274-block  0
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  274-block  1
call    6 never executed
        1:  274-block  2
call    7 returned 1
        1:  274-block  3
        -:  275:    }
        1:  276:    catch(ValidError& ve){
        1:  276-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  276-block  1
call    2 returned 1
        -:  277:        assert(true);
        1:  278:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  279:}
        1:  279-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
call   13 returned 1
call   14 returned 1
call   15 returned 1
call   16 returned 1
call   17 returned 1
call   18 returned 1
call   19 returned 1
call   20 returned 1
    $$$$$:  279-block  1
call   21 never executed
    $$$$$:  279-block  2
call   22 never executed
    $$$$$:  279-block  3
call   23 never executed
    $$$$$:  279-block  4
call   24 never executed
    $$$$$:  279-block  5
call   25 never executed
    $$$$$:  279-block  6
call   26 never executed
    $$$$$:  279-block  7
call   27 never executed
    $$$$$:  279-block  8
call   28 never executed
    $$$$$:  279-block  9
call   29 never executed
    $$$$$:  279-block 10
call   30 never executed
    $$$$$:  279-block 11
call   31 never executed
    $$$$$:  279-block 12
call   32 never executed
    $$$$$:  279-block 13
call   33 never executed
    $$$$$:  279-block 14
call   34 never executed
    $$$$$:  279-block 15
call   35 never executed
    $$$$$:  279-block 16
call   36 never executed
    $$$$$:  279-block 17
call   37 never executed
    $$$$$:  279-block 18
call   38 never executed
    $$$$$:  279-block 19
call   39 never executed
    $$$$$:  279-block 20
call   40 never executed
    $$$$$:  279-block 21
call   41 never executed
        -:  280:
function _ZN7Testing9run_testsEv called 1 returned 100% blocks executed 100%
        1:  281:void Testing::run_tests() {
        -:  282:
        1:  283:    test_domain();
        1:  283-block  0
call    0 returned 1
        1:  284:    test_repo();
call    0 returned 1
        1:  285:    test_service();
call    0 returned 1
        1:  286:    test_validation();
call    0 returned 1
        1:  287:}
        -:  288:
